name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '16.13.0'

      - name: Install Ganache
        run: npm install -g ganache@7.0.2

      - name: Set up Python 3.8.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.9'

      - name: Cache VENV
        uses: actions/cache@v2
        with:
          path: /venv
          key: ${{ runner.os }}-cache2-venv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-cache2-venv-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Test with Brownie
        run: |
          python -m venv venv
          source venv/bin/activate
          brownie test -n auto --coverage

      - name: Upload Coverage Report to Codecov
        if: always()
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./reports/coverage.json
          fail_ci_if_error: true

  formatting:
    name: Formatting Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
          
      - name: Set up Python 3.8.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.9'

      - name: Cache VENV
        uses: actions/cache@v2
        with:
          path: /venv
          key: ${{ runner.os }}-cache2-venv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-cache2-venv-

      - name: Install dependencies
        run: |
          touch .env
          python -m pip install --upgrade pip
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Check Formatting
        run: |
          python -m venv venv
          source venv/bin/activate
          black --check --diff ./tests
